/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as BowlsImport } from './routes/bowls'
import { Route as IndexImport } from './routes/index'
import { Route as BowlsIndexImport } from './routes/bowls.index'
import { Route as BowlsAddImport } from './routes/bowls_.add'
import { Route as BowlsBowlIdImport } from './routes/bowls_.$bowlId'

// Create/Update Routes

const BowlsRoute = BowlsImport.update({
  id: '/bowls',
  path: '/bowls',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const BowlsIndexRoute = BowlsIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => BowlsRoute,
} as any)

const BowlsAddRoute = BowlsAddImport.update({
  id: '/bowls_/add',
  path: '/bowls/add',
  getParentRoute: () => rootRoute,
} as any)

const BowlsBowlIdRoute = BowlsBowlIdImport.update({
  id: '/bowls_/$bowlId',
  path: '/bowls/$bowlId',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/bowls': {
      id: '/bowls'
      path: '/bowls'
      fullPath: '/bowls'
      preLoaderRoute: typeof BowlsImport
      parentRoute: typeof rootRoute
    }
    '/bowls_/$bowlId': {
      id: '/bowls_/$bowlId'
      path: '/bowls/$bowlId'
      fullPath: '/bowls/$bowlId'
      preLoaderRoute: typeof BowlsBowlIdImport
      parentRoute: typeof rootRoute
    }
    '/bowls_/add': {
      id: '/bowls_/add'
      path: '/bowls/add'
      fullPath: '/bowls/add'
      preLoaderRoute: typeof BowlsAddImport
      parentRoute: typeof rootRoute
    }
    '/bowls/': {
      id: '/bowls/'
      path: '/'
      fullPath: '/bowls/'
      preLoaderRoute: typeof BowlsIndexImport
      parentRoute: typeof BowlsImport
    }
  }
}

// Create and export the route tree

interface BowlsRouteChildren {
  BowlsIndexRoute: typeof BowlsIndexRoute
}

const BowlsRouteChildren: BowlsRouteChildren = {
  BowlsIndexRoute: BowlsIndexRoute,
}

const BowlsRouteWithChildren = BowlsRoute._addFileChildren(BowlsRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/bowls': typeof BowlsRouteWithChildren
  '/bowls/$bowlId': typeof BowlsBowlIdRoute
  '/bowls/add': typeof BowlsAddRoute
  '/bowls/': typeof BowlsIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/bowls/$bowlId': typeof BowlsBowlIdRoute
  '/bowls/add': typeof BowlsAddRoute
  '/bowls': typeof BowlsIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/bowls': typeof BowlsRouteWithChildren
  '/bowls_/$bowlId': typeof BowlsBowlIdRoute
  '/bowls_/add': typeof BowlsAddRoute
  '/bowls/': typeof BowlsIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/bowls' | '/bowls/$bowlId' | '/bowls/add' | '/bowls/'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/bowls/$bowlId' | '/bowls/add' | '/bowls'
  id:
    | '__root__'
    | '/'
    | '/bowls'
    | '/bowls_/$bowlId'
    | '/bowls_/add'
    | '/bowls/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  BowlsRoute: typeof BowlsRouteWithChildren
  BowlsBowlIdRoute: typeof BowlsBowlIdRoute
  BowlsAddRoute: typeof BowlsAddRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  BowlsRoute: BowlsRouteWithChildren,
  BowlsBowlIdRoute: BowlsBowlIdRoute,
  BowlsAddRoute: BowlsAddRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/bowls",
        "/bowls_/$bowlId",
        "/bowls_/add"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/bowls": {
      "filePath": "bowls.tsx",
      "children": [
        "/bowls/"
      ]
    },
    "/bowls_/$bowlId": {
      "filePath": "bowls_.$bowlId.tsx"
    },
    "/bowls_/add": {
      "filePath": "bowls_.add.tsx"
    },
    "/bowls/": {
      "filePath": "bowls.index.tsx",
      "parent": "/bowls"
    }
  }
}
ROUTE_MANIFEST_END */
